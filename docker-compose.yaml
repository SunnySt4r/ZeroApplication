version: "3"
services:
  zero_application:
    image: zero_application:0.0.1
    container_name: zero_application
    build:
      context: ./backend
      dockerfile: Dockerfile
    expose:
      - "8080"
    ports:
      - "8080:8080"
    depends_on:
      database:
        condition: service_healthy
      minio:
        condition: service_started
    environment:
      SERVER_PORT: ${SERVER_PORT}
      SERVER_ADDRESS: ${SERVER_ADDRESS}
      SPRING_DATASOURCE_URL: ${SPRING_DATASOURCE_URL}
      MINIO_URL: ${MINIO_URL}


  database:
    image: postgres:14-alpine3.18
    container_name: database
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_INITDB_ARGS: ${POSTGRES_INITDB_ARGS}
    ports:
      - "15432:5432"
    volumes:
      - zero-application-db:/data/postgres
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U user -d database" ]
      interval: 5s
      retries: 5
      timeout: 10s


  minio:
    image: minio/minio:latest
    container_name: minio
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
    volumes:
      - ./environment/minio/data:/data
    ports:
      - "9000:9000"
      - "9001:9001"
    command: server /data --console-address :9001


  frontend:
    image: zero_app_front:0.0.1
    container_name: zero_app_front
    build:
      context: ./front
      dockerfile: Dockerfile
      target: build
    volumes:
      - ./src:/app/src
    ports:
      - "3000:3000"


volumes:
  zero-application-db:
  storage-minio: